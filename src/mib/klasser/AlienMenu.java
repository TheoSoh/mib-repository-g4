/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib.klasser;

import static java.lang.Integer.parseInt;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 * klassens fält
 * @author Grupp4
 */
public class AlienMenu extends javax.swing.JFrame {
    
    //Variabel deklaration - påbörjas här
    private InfDB idb;
    private int alienId;
    private int positionId;
    private int areaId;
    private int areaCommanderId;
    //Variabel deklaration - avslutas här
    
    
    /**
     * Creates new form agentMeny
     */
    public AlienMenu(InfDB idb, int alienId) {
        initComponents();
        this.idb = idb;
        this.alienId = alienId;
        lblAlienId.setText("Your Alien-id: " + alienId);
        setTitle("Alien Menu");
        checkPosition();
        checkArea();
        checkMyAreaCommander();
        setLabels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAlienHeader = new javax.swing.JLabel();
        lblAlienId = new javax.swing.JLabel();
        lblCommanderInfoHeader = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblShowName = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        lblShowPhoneNumber = new javax.swing.JLabel();
        lblArea = new javax.swing.JLabel();
        lblShowArea = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblAlienHeader.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblAlienHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAlienHeader.setText("MIB - Alien menu");

        lblAlienId.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        lblCommanderInfoHeader.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCommanderInfoHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCommanderInfoHeader.setText("Information about your area manager:");

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name: ");

        lblPhoneNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPhoneNumber.setText("Phone Number:");

        lblArea.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArea.setText("Area:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(lblAlienHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 159, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblCommanderInfoHeader)
                        .addGap(185, 185, 185))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblShowName, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(lblShowPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblShowArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(145, 145, 145))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblAlienHeader)
                .addGap(10, 10, 10)
                .addComponent(lblAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblCommanderInfoHeader)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(lblShowName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNumber)
                    .addComponent(lblShowPhoneNumber))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArea)
                    .addComponent(lblShowArea))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void checkPosition() {
        try {
            String sqlQuery = "select Plats from Alien where Alien_ID = " + alienId;
            String position = idb.fetchSingle(sqlQuery);
            positionId = parseInt(position);
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
    }
    
    private void checkArea() {
        try {
            String sqlAreaIdQuery = "select Finns_I from Plats where Plats_ID = " + positionId;
            String area = idb.fetchSingle(sqlAreaIdQuery);
            areaId = parseInt(area);
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
    }
    
    private void checkMyAreaCommander() {
        try {
            String sqlAgentIdQuery = "select Agent_ID from Omradeschef where Omrade = " + areaId;
            String agentId = idb.fetchSingle(sqlAgentIdQuery);
            areaCommanderId = parseInt(agentId);
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
    }
    
    /**
     * 
     */
    private void setLabels() {
        try {
            String sqlQuery = "select Namn, Telefon from Agent where Agent_ID = " + areaCommanderId;
            HashMap<String, String> agentInfoRow = idb.fetchRow(sqlQuery);
            
            lblShowName.setText(agentInfoRow.get("Namn"));
            lblShowPhoneNumber.setText(agentInfoRow.get("Telefon"));
            lblShowArea.setText("" + areaId);
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblAlienHeader;
    private javax.swing.JLabel lblAlienId;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblCommanderInfoHeader;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblShowArea;
    private javax.swing.JLabel lblShowName;
    private javax.swing.JLabel lblShowPhoneNumber;
    // End of variables declaration//GEN-END:variables
}
