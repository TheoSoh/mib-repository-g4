/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib.klasser;

import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Grupp4
 */
public class ChangeAgentInfoPage extends javax.swing.JFrame {

    //Här påbörjas deklaration av fält.
    private InfDB idb;
    private int agentId;
    private int selectedAgentId;
    //Här slutar deklarationen av fält.
    
    /**
     * Creates new form ChangeAlienInfoPage
     * @param idb
     * @param agentId 
     */
    public ChangeAgentInfoPage(InfDB idb, int agentId) {
        initComponents();
        this.idb = idb;
        this.agentId = agentId;
        addItemsToCmbAgentId();
        addItemsToCmbInfoToChange();
        setTitle("Change agent Info");
    }
    
    /**
     * 
     */
    private void addItemsToCmbInfoToChange() {
        String firstValue = "Name";
        String secondValue = "Phone number";
        String thirdValue = "Employment date";
        String fourthValue = "Admin status";
        String fifthValue = "Password";
        String sixthValue = "Area";
        cmbInfoToChange.addItem(firstValue);
        cmbInfoToChange.addItem(secondValue);
        cmbInfoToChange.addItem(thirdValue);
        cmbInfoToChange.addItem(fourthValue);
        cmbInfoToChange.addItem(fifthValue);
        cmbInfoToChange.addItem(sixthValue);
    }
    
    /**
     * 
     */
    private void addItemsToCmbAgentId() {
        try {
            String sqlQuestion = "select Alien_ID from Alien";
            ArrayList<String> agentIdList = idb.fetchColumn(sqlQuestion);
            for(String anAgentId : agentIdList) {
                cmbAgentId.addItem(anAgentId);
            }
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblChangeInfoHeader = new javax.swing.JLabel();
        cmbAgentId = new javax.swing.JComboBox<>();
        lblAgentId = new javax.swing.JLabel();
        cmbInfoToChange = new javax.swing.JComboBox<>();
        lblChangeThis = new javax.swing.JLabel();
        txtNewValue = new javax.swing.JTextField();
        lblNewValue = new javax.swing.JLabel();
        btnChangeInfo = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblSuccessMessage = new javax.swing.JLabel();
        lblErrorMessage = new javax.swing.JLabel();
        lblAmmount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblChangeInfoHeader.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblChangeInfoHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChangeInfoHeader.setText("Change an agent's information");

        cmbAgentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAgentIdActionPerformed(evt);
            }
        });

        lblAgentId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAgentId.setText("Agent-ID:");

        lblChangeThis.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblChangeThis.setText("Info to change:");

        lblNewValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNewValue.setText("Insert new value here:");

        btnChangeInfo.setText("Change");
        btnChangeInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeInfoActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblSuccessMessage.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        lblSuccessMessage.setForeground(new java.awt.Color(0, 255, 0));
        lblSuccessMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblErrorMessage.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        lblErrorMessage.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblAmmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSuccessMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnChangeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblAmmount, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(302, 302, 302))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(lblChangeThis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblAgentId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbInfoToChange, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(cmbAgentId, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(134, 134, 134))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblChangeInfoHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblChangeInfoHeader)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAgentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAgentId))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbInfoToChange, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChangeThis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNewValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(lblSuccessMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnChangeInfo)
                        .addComponent(btnCancel))
                    .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAmmount)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @return 
     */
    private String getAliensRace() {
        String race = "";
        
        try {
            String sqlBogloditeQuery = "select * from Boglodite";
            ArrayList<HashMap<String, String>> bogloditeTable;
            bogloditeTable = idb.fetchRows(sqlBogloditeQuery);
            for(HashMap<String, String> everyBoglodite : bogloditeTable) {
                if(everyBoglodite.get("Alien_ID").equals(selectedRaceAlienId)) {
                    race = "Boglodite";
                }
            }
            
            String sqlSquidQuery = "select * from Squid";
            ArrayList<HashMap<String, String>> SquidTable;
            SquidTable = idb.fetchRows(sqlSquidQuery);
            for(HashMap<String, String> everySquid : SquidTable) {
                if(everySquid.get("Alien_ID").equals(selectedRaceAlienId)) {
                    race = "Squid";
                }
            }
            
            String sqlWormQuery = "select * from Worm";
            ArrayList<HashMap<String, String>> WormTable;
            WormTable = idb.fetchRows(sqlWormQuery);
            for(HashMap<String, String> everyWorm : WormTable) {
                if(everyWorm.get("Alien_ID").equals(selectedRaceAlienId)) {
                    race = "Worm";
                }
            }
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
        return race;
    }
    
    /**
     * 
     * @param evt 
     */
    private void btnChangeInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeInfoActionPerformed
        String selectedInfo = getCorrectString();
        int selectedIntValueAlienId = parseInt(selectedValueAlienId);
        String newValue = txtNewValue.getText();
        
        try {
            if(Validation.checkEmptyTxtField(txtNewValue)) {
                lblErrorMessage.setText("Enter Value!");
            }
            else if(Validation.checkIfTxtFieldIsOfInt(txtNewValue)){
                String sqlQuery = "update Alien set " + selectedInfo + " = " + newValue + " where Alien_ID = " + selectedIntValueAlienId + ";";
                lblErrorMessage.setText("");
                idb.update(sqlQuery);
                lblSuccessMessage.setText("Success!");
            }
            else {
                String sqlQuery = "update Alien set " + selectedInfo + " = '" + newValue + "' where Alien_ID = " + selectedIntValueAlienId + ";";
                lblErrorMessage.setText("");
                idb.update(sqlQuery);
                lblSuccessMessage.setText("Success!");
            }
        }
        catch(InfException e) {
            lblErrorMessage.setText("Invalid value!");
            lblSuccessMessage.setText("");
        }
        
        
    }//GEN-LAST:event_btnChangeInfoActionPerformed
    
    /**
     * 
     * @return 
     */
    private String getCorrectString() {
        String correctString = "";
        String selectedInfo = cmbInfoToChange.getSelectedItem().toString();
        
        switch (selectedInfo) {
            case "Registrationdate":
                correctString = "Registreringsdatum";
                break;
            case "Password":
                correctString = "Losenord";
                break;
            case "Name":
                correctString = "Namn";
                break;
            case "Phone Number":
                correctString = "Telefon";
                break;
            case "Area":
                correctString = "Plats";
                break;
            default:
                correctString = "Ansvarig_Agent";
                break;
        }
        
        return correctString;
    }
    
    /**
     * 
     * @param evt 
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        ChangeAgentInfoPage.this.dispose();
        if(checkAdminStatus()) {
            new AdminMenu(idb, agentId).setVisible(true);
        }
        else {
            new AgentMenu(idb, agentId).setVisible(true);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * 
     * @param evt 
     */
    private void cmbAgentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAgentIdActionPerformed
        selectedValueAlienId = cmbAgentId.getSelectedItem().toString();
    }//GEN-LAST:event_cmbAgentIdActionPerformed

   
    /**
     * 
     * @return 
     */
    private boolean checkAdminStatus() {
        boolean isAdmin = false;
        try {
            String sqlQuestion = "select Administrator from Agent where Agent_ID = '" + agentId + "';";
            String result = idb.fetchSingle(sqlQuestion);
            if(result.equals("J")) {
                isAdmin = true;
            }
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
        return isAdmin;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChangeInfo;
    private javax.swing.JComboBox<String> cmbAgentId;
    private javax.swing.JComboBox<String> cmbInfoToChange;
    private javax.swing.JLabel lblAgentId;
    private javax.swing.JLabel lblAmmount;
    private javax.swing.JLabel lblChangeInfoHeader;
    private javax.swing.JLabel lblChangeThis;
    private javax.swing.JLabel lblErrorMessage;
    private javax.swing.JLabel lblNewValue;
    private javax.swing.JLabel lblSuccessMessage;
    private javax.swing.JTextField txtNewValue;
    // End of variables declaration//GEN-END:variables
}
