/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib.klasser;

import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author theosohlman
 */
public class DeleteAlienPage extends javax.swing.JFrame {

    private InfDB idb;
    private int agentId;
    private int selectedAlienId;
    
    /**
     * Creates new form DeleteAgentPage
     */
    public DeleteAlienPage(InfDB idb, int agentId) {
        initComponents();
        this.idb = idb;
        this.agentId = agentId;
        LoginPage.addAlienIdToCmb(cmbAlienId);
        setTitle("Delete an Alien");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDeleteAlienHeader = new javax.swing.JLabel();
        cmbAlienId = new javax.swing.JComboBox<>();
        lblAlienId = new javax.swing.JLabel();
        lblAlienName = new javax.swing.JLabel();
        lblShowAlienName = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblSuccessMessage = new javax.swing.JLabel();
        lblErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDeleteAlienHeader.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblDeleteAlienHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDeleteAlienHeader.setText("Delete an Alien");

        cmbAlienId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAlienIdActionPerformed(evt);
            }
        });

        lblAlienId.setText("Delete this Alien-ID:");

        lblAlienName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAlienName.setText("Alien's name:");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblSuccessMessage.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblSuccessMessage.setForeground(new java.awt.Color(0, 255, 0));
        lblSuccessMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblErrorMessage.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblErrorMessage.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblSuccessMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lblDeleteAlienHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(21, 21, 21))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblAlienName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblAlienId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmbAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblShowAlienName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(80, 80, 80)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblDeleteAlienHeader)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAlienId))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlienName)
                    .addComponent(lblShowAlienName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(lblSuccessMessage)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnCancel)
                    .addComponent(lblErrorMessage))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbAlienIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAlienIdActionPerformed
        String selectedAlienIdString = cmbAlienId.getSelectedItem().toString();
        selectedAlienId = parseInt(selectedAlienIdString);
        
        try {
            String sqlQuery = "select Namn from Alien where Alien_ID = " + selectedAlienId;
            String alienName = idb.fetchSingle(sqlQuery);
            lblShowAlienName.setText(alienName);
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
        
    }//GEN-LAST:event_cmbAlienIdActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            if(checkIfAlienIsBoglodite()) {
                String deleteFromRaceQuery = "delete from Boglodite where Alien_ID = " + selectedAlienId + ";";
                idb.delete(deleteFromRaceQuery);
            }
            else if(checkIfAlienIsSquid()) {
                String deleteFromRaceQuery = "delete from Squid where Alien_ID = " + selectedAlienId + ";";
                idb.delete(deleteFromRaceQuery);
            }
            else {
                String deleteFromRaceQuery = "delete from Worm where Alien_ID = " + selectedAlienId + ";";
                idb.delete(deleteFromRaceQuery);
            }
            
            String sqlDeleteQuery = "delete from Alien where Alien_ID = " + selectedAlienId;
            idb.delete(sqlDeleteQuery);
            lblSuccessMessage.setText(selectedAlienId + " was deleted!");
            lblErrorMessage.setText("");
        }
        catch(InfException e) {
            lblSuccessMessage.setText("");
            lblErrorMessage.setText("Something went wrong!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        DeleteAlienPage.this.dispose();
        new AdminMenu(idb, agentId).setVisible(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private boolean checkIfAlienIsBoglodite() {
        boolean isBoglodite = false;
        
        try {
            String sqlBogloditeQuery = "select Alien_ID from Boglodite where Alien_ID = " + selectedAlienId + ";";
            String result = idb.fetchSingle(sqlBogloditeQuery);
            if(result != null) {
                isBoglodite = true;
            }
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
        return isBoglodite;
    }
    
    private boolean checkIfAlienIsSquid() {
        boolean isSquid = false;
        
        try {
            String sqlSquidQuery = "select Alien_ID from Squid where Alien_ID = " + selectedAlienId + ";";
            String result = idb.fetchSingle(sqlSquidQuery);
            if(result != null) {
                isSquid = true;
            }
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
        return isSquid;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox<String> cmbAlienId;
    private javax.swing.JLabel lblAlienId;
    private javax.swing.JLabel lblAlienName;
    private javax.swing.JLabel lblDeleteAlienHeader;
    private javax.swing.JLabel lblErrorMessage;
    private javax.swing.JLabel lblShowAlienName;
    private javax.swing.JLabel lblSuccessMessage;
    // End of variables declaration//GEN-END:variables
}
