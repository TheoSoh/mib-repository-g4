/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib.klasser;

import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Grupp4
 */
public class ChangeAlienInfoPage extends javax.swing.JFrame {

    //Här påbörjas deklaration av fält.
    private InfDB idb;
    private int agentId;
    private String selectedValueAlienId;
    private String selectedRaceAlienId;
    private String selectedNewRace;
    //Här slutar deklarationen av fält.
    
    /**
     * Creates new form ChangeAlienInfoPage
     * @param idb
     * @param agentId 
     */
    public ChangeAlienInfoPage(InfDB idb, int agentId) {
        initComponents();
        this.idb = idb;
        this.agentId = agentId;
        LoginPage.addAlienIdToCmb(cmbValueAlienId);
        LoginPage.addAlienIdToCmb(cmbRaceAlienId);
        addItemsToCmbInfoToChange();
        Validation.addRaceToCmb(cmbNewRace);
        setTitle("Change alien Info");
    }
    
    /**
     * Denna metod lägger till föremål (värden) till komboboxen.
     */
    private void addItemsToCmbInfoToChange() {
        String firstValue = "Registrationdate";
        String secondValue = "Password";
        String thirdValue = "Name";
        String fourthValue = "Phone number";
        String fifthValue = "Area";
        String sixthValue = "Assigned Agent";
        cmbInfoToChange.addItem(firstValue);
        cmbInfoToChange.addItem(secondValue);
        cmbInfoToChange.addItem(thirdValue);
        cmbInfoToChange.addItem(fourthValue);
        cmbInfoToChange.addItem(fifthValue);
        cmbInfoToChange.addItem(sixthValue);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblChangeInfoHeader = new javax.swing.JLabel();
        cmbValueAlienId = new javax.swing.JComboBox<>();
        lblValueAlienId = new javax.swing.JLabel();
        cmbInfoToChange = new javax.swing.JComboBox<>();
        lblChangeThis = new javax.swing.JLabel();
        txtNewValue = new javax.swing.JTextField();
        lblNewValue = new javax.swing.JLabel();
        btnChangeInfo = new javax.swing.JButton();
        separator = new javax.swing.JSeparator();
        cmbNewRace = new javax.swing.JComboBox<>();
        btnSetNewRace = new javax.swing.JButton();
        lblSetNewRace = new javax.swing.JLabel();
        lblRaceAlienId = new javax.swing.JLabel();
        cmbRaceAlienId = new javax.swing.JComboBox<>();
        btnCancel = new javax.swing.JButton();
        lblRaceSuccessMessage = new javax.swing.JLabel();
        lblValueSuccessMessage = new javax.swing.JLabel();
        lblValueErrorMessage = new javax.swing.JLabel();
        lblRaceErrorMessage = new javax.swing.JLabel();
        txtAmmount = new javax.swing.JTextField();
        lblAmmount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblChangeInfoHeader.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblChangeInfoHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChangeInfoHeader.setText("Change alien's information");

        cmbValueAlienId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbValueAlienIdActionPerformed(evt);
            }
        });

        lblValueAlienId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblValueAlienId.setText("Alien-ID:");

        lblChangeThis.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblChangeThis.setText("Info to change:");

        lblNewValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNewValue.setText("Insert new value here:");

        btnChangeInfo.setText("Change");
        btnChangeInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeInfoActionPerformed(evt);
            }
        });

        cmbNewRace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNewRaceActionPerformed(evt);
            }
        });

        btnSetNewRace.setText("Set Race");
        btnSetNewRace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetNewRaceActionPerformed(evt);
            }
        });

        lblSetNewRace.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSetNewRace.setText("Set new race:");

        lblRaceAlienId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRaceAlienId.setText("Alien-ID:");

        cmbRaceAlienId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRaceAlienIdActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblRaceSuccessMessage.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        lblRaceSuccessMessage.setForeground(new java.awt.Color(0, 255, 0));
        lblRaceSuccessMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblValueSuccessMessage.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        lblValueSuccessMessage.setForeground(new java.awt.Color(0, 255, 0));
        lblValueSuccessMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblValueErrorMessage.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        lblValueErrorMessage.setForeground(new java.awt.Color(255, 0, 0));
        lblValueErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblRaceErrorMessage.setForeground(new java.awt.Color(255, 0, 0));
        lblRaceErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblAmmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblChangeInfoHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 59, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRaceErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblRaceAlienId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblSetNewRace, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(lblAmmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbNewRace, 0, 130, Short.MAX_VALUE)
                                    .addComponent(txtAmmount)
                                    .addComponent(cmbRaceAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSetNewRace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblRaceSuccessMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(lblChangeThis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblValueAlienId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbInfoToChange, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(cmbValueAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnChangeInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(lblValueSuccessMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(lblValueErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblChangeInfoHeader)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbValueAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValueAlienId))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbInfoToChange, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblChangeThis)
                            .addComponent(btnChangeInfo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNewValue)))
                    .addComponent(lblValueSuccessMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblValueErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbRaceAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblRaceAlienId, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cmbNewRace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSetNewRace)
                                .addGap(15, 15, 15)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblAmmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAmmount)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnSetNewRace)
                        .addGap(18, 18, 18)
                        .addComponent(lblRaceSuccessMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancel)
                    .addComponent(lblRaceErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Denna meetod gör så att man kan ändra information om en redan existerande alien. Detta genom ett antal validations-metoder.
     * Validations-metoderna kontrollerar så att godkända värden förts in samt "uppdaterar" de värden som bytts till den enskilda alien.
     * @param evt 
     */
    private void btnSetNewRaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetNewRaceActionPerformed
        int intAlienIdSelected = parseInt(selectedRaceAlienId);
        String ammount = txtAmmount.getText();
        String aliensOldRace = getAliensRace();
        
        try {
            if(selectedNewRace.equals(aliensOldRace)) {
                lblRaceSuccessMessage.setText("");
                lblRaceErrorMessage.setText("Alien is already of this Race!");
            }
            else if(!Validation.checkIfNewRaceIsWorm(selectedNewRace)) {
                if(!Validation.checkEmptyTxtField(txtAmmount)) {
                    if(Validation.checkIfTxtFieldIsOfInt(txtAmmount)) {
                        int intAmmount = parseInt(ammount);
                        String sqlNewRaceQuery = "insert into " + selectedNewRace + " values(" + intAlienIdSelected + ", " + intAmmount + ");";
                        idb.insert(sqlNewRaceQuery);
                        
                        if(!aliensOldRace.equals("")) {
                            String sqlOldRaceQuery = "delete from " + aliensOldRace + " where Alien_ID = " + intAlienIdSelected + ";";
                            idb.delete(sqlOldRaceQuery);
                        }
                        setSuccessMessage();
                    }
                    else if(!Validation.checkIfTxtFieldIsOfInt(txtAmmount)) {
                        lblRaceSuccessMessage.setText("");
                        lblRaceErrorMessage.setText("The ammount must be a number!");
                    }
                }
                else if(Validation.checkEmptyTxtField(txtAmmount)) {
                    lblRaceSuccessMessage.setText("");
                    lblRaceErrorMessage.setText("Enter an ammount!");
                }
            }
            else if(Validation.checkIfNewRaceIsWorm(selectedNewRace)) {
                String sqlNewRaceQuery = "insert into Worm values(" + intAlienIdSelected + ");";
                idb.insert(sqlNewRaceQuery);
                
                if(!aliensOldRace.equals("")) {
                    String sqlOldRaceQuery = "delete from " + aliensOldRace + " where Alien_ID = '" + intAlienIdSelected + "';";
                    idb.delete(sqlOldRaceQuery);
                }
                setSuccessMessage();
            }
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
    }//GEN-LAST:event_btnSetNewRaceActionPerformed

    /**
     * Metoden ändrar texten i två labels för att meddela användaren att ändringen lyckades.
     */
    private void setSuccessMessage() {
        lblRaceSuccessMessage.setText("Success!");
        lblRaceErrorMessage.setText("");
    }
    
    /**
     * Denna metod hämtar ut rasen på alien beroende på alien-Id.
     * @return 
     */
    private String getAliensRace() {
        String race = "";
        
        try {
            String sqlBogloditeQuery = "select * from Boglodite";
            ArrayList<HashMap<String, String>> bogloditeTable;
            bogloditeTable = idb.fetchRows(sqlBogloditeQuery);
            for(HashMap<String, String> everyBoglodite : bogloditeTable) {
                if(everyBoglodite.get("Alien_ID").equals(selectedRaceAlienId)) {
                    race = "Boglodite";
                }
            }
            
            String sqlSquidQuery = "select * from Squid";
            ArrayList<HashMap<String, String>> SquidTable;
            SquidTable = idb.fetchRows(sqlSquidQuery);
            for(HashMap<String, String> everySquid : SquidTable) {
                if(everySquid.get("Alien_ID").equals(selectedRaceAlienId)) {
                    race = "Squid";
                }
            }
            
            String sqlWormQuery = "select * from Worm";
            ArrayList<HashMap<String, String>> WormTable;
            WormTable = idb.fetchRows(sqlWormQuery);
            for(HashMap<String, String> everyWorm : WormTable) {
                if(everyWorm.get("Alien_ID").equals(selectedRaceAlienId)) {
                    race = "Worm";
                }
            }
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Internal database error!");
        }
        return race;
    }
    
    /**
     * Denna metod innehåller flera metoder från validation, som kontrollerar att de paramterar som skall fyllas i inte är tomma, samt uppdaterar
     * den nya informationen till en specifik alien i databasen.
     * @param evt 
     */
    private void btnChangeInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeInfoActionPerformed
        String selectedInfo = getCorrectString();
        int selectedIntValueAlienId = parseInt(selectedValueAlienId);
        String newValue = txtNewValue.getText();
        
        try {
            if(Validation.checkEmptyTxtField(txtNewValue)) {
                lblValueErrorMessage.setText("Enter Value!");
            }
            else if(Validation.checkIfTxtFieldIsOfInt(txtNewValue) && (!selectedInfo.equals("Losenord"))){
                String sqlQuery = "update Alien set " + selectedInfo + " = " + newValue + " where Alien_ID = " + selectedIntValueAlienId + ";";
                lblValueErrorMessage.setText("");
                idb.update(sqlQuery);
                lblValueSuccessMessage.setText("Success!");
            }
            else {
                if((selectedInfo.equals("Losenord")) && (LoginPage.checkAdminStatus(agentId))) {
                    String sqlQuery = "update Alien set " + selectedInfo + " = '" + newValue + "' where Alien_ID = " + selectedIntValueAlienId + ";";
                    idb.update(sqlQuery);
                    lblValueErrorMessage.setText("");
                    lblValueSuccessMessage.setText("Success!");
                }
                else if((selectedInfo.equals("Losenord")) && (!LoginPage.checkAdminStatus(agentId))) {
                    lblValueSuccessMessage.setText("");
                    lblValueErrorMessage.setText("Insufficient permission!");
                }
                else {
                    String sqlQuery = "update Alien set " + selectedInfo + " = '" + newValue + "' where Alien_ID = " + selectedIntValueAlienId + ";";
                    idb.update(sqlQuery);
                    lblValueErrorMessage.setText("");
                    lblValueSuccessMessage.setText("Success!");
                }
            }
        }
        catch(InfException e) {
            lblValueErrorMessage.setText("Invalid value!");
            lblValueSuccessMessage.setText("");
        }
        
        
    }//GEN-LAST:event_btnChangeInfoActionPerformed
    
    /**
     * I denna metod används en switch för att välja ett föremål ur komboboxen samt ersätter strängarnas namn från olika språk.
     *
     * @return 
     */
    private String getCorrectString() {
        String correctString = "";
        String selectedInfo = cmbInfoToChange.getSelectedItem().toString();
        
        switch (selectedInfo) {
            case "Password":
                correctString = "Losenord";
                break;
            case "Name":
                correctString = "Namn";
                break;
            case "Phone Number":
                correctString = "Telefon";
                break;
            case "Area":
                correctString = "Plats";
                break;
            default:
                correctString = "Ansvarig_Agent";
                break;
        }
        
        return correctString;
    }
    
    /**
     * Denna metod stänger fönstret samt öppnar ett nytt beroende av om id:t man är inloggad med har admin-status eller inte.
     * @param evt 
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
        if(LoginPage.checkAdminStatus(agentId)) {
            new AdminMenu(idb, agentId).setVisible(true);
        }
        else {
            new AgentMenu(idb, agentId).setVisible(true);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * I denna metod väljer man en ras ur komboboxen som uppdaterar alienen med en ny ras samt ändrar specifika värden kopplade till en ras.
     * @param evt 
     */
    private void cmbNewRaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNewRaceActionPerformed
        selectedNewRace = cmbNewRace.getSelectedItem().toString();
        if(selectedNewRace.equals("Boglodite")) {
            lblAmmount.setText("Antal boogies:");
            txtAmmount.setVisible(true);
        }
        else if(selectedNewRace.equals("Squid")) {
            lblAmmount.setText("Antal armar:");
            txtAmmount.setVisible(true);
        }
        else if(selectedNewRace.equals("Worm")) {
            lblAmmount.setText("");
            txtAmmount.setVisible(false);
        }
    }//GEN-LAST:event_cmbNewRaceActionPerformed

    /**
     * I denna metod väljer man för vilket ID man vill ändra information.
     * @param evt 
     */
    private void cmbValueAlienIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbValueAlienIdActionPerformed
        selectedValueAlienId = cmbValueAlienId.getSelectedItem().toString();
    }//GEN-LAST:event_cmbValueAlienIdActionPerformed

    /**
     * I denna metod väljer man vilken ny ras man ska ge Id:t.
     * @param evt 
     */
    private void cmbRaceAlienIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRaceAlienIdActionPerformed
        selectedRaceAlienId = cmbRaceAlienId.getSelectedItem().toString();
    }//GEN-LAST:event_cmbRaceAlienIdActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChangeInfo;
    private javax.swing.JButton btnSetNewRace;
    private javax.swing.JComboBox<String> cmbInfoToChange;
    private javax.swing.JComboBox<String> cmbNewRace;
    private javax.swing.JComboBox<String> cmbRaceAlienId;
    private javax.swing.JComboBox<String> cmbValueAlienId;
    private javax.swing.JLabel lblAmmount;
    private javax.swing.JLabel lblChangeInfoHeader;
    private javax.swing.JLabel lblChangeThis;
    private javax.swing.JLabel lblNewValue;
    private javax.swing.JLabel lblRaceAlienId;
    private javax.swing.JLabel lblRaceErrorMessage;
    private javax.swing.JLabel lblRaceSuccessMessage;
    private javax.swing.JLabel lblSetNewRace;
    private javax.swing.JLabel lblValueAlienId;
    private javax.swing.JLabel lblValueErrorMessage;
    private javax.swing.JLabel lblValueSuccessMessage;
    private javax.swing.JSeparator separator;
    private javax.swing.JTextField txtAmmount;
    private javax.swing.JTextField txtNewValue;
    // End of variables declaration//GEN-END:variables
}
